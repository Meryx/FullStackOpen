{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","axios","get","then","response","data","newObject","post","id","put","Button","text","handleClick","type","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","console","log","noteService","init","length","notesToShow","filter","map","i","key","find","n","changedNote","updated","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","created","concat","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"+LAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEdC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,4BAAKH,EAAKI,QACR,4BAAQC,QAASJ,GAAmBC,K,gBCU3B,EAfA,WAEb,OADgBI,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC0ErCK,EAAS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtB,OACE,4BAAQC,KAAK,SAASb,QAASY,GAC5BD,IAKQG,EA7FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAsBhBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IAEGtB,MAAK,SAAAuB,GACJT,EAASS,QAEZ,IACHH,QAAQC,IAAI,SAAUR,EAAMW,OAAQ,SAEpC,IAyBMC,EAAcR,EAChBJ,EACAA,EAAMa,QAAO,SAAAlC,GAAI,OAAIA,EAAKG,aAG9B,OACE,6BACE,qCACA,4BACG8B,EAAYE,KAAI,SAACnC,EAAMoC,GAAP,OACf,kBAAC,EAAD,CAAMC,IAAKD,EAAGpC,KAAMA,EAAMC,iBAAkB,kBA9DzB,SAACY,GAC1B,IAAMb,EAAOqB,EAAMiB,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQxC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EACUjB,EAAI2B,GACXhC,MAAK,SAAAiC,GACJnB,EAASD,EAAMc,KAAI,SAAAnC,GAAI,OAAIA,EAAKa,KAAOA,EAAKb,EAAOyC,SAEpDC,OAAM,SAAAC,GACLC,MAAM,aAAD,OACU5C,EAAKI,QADf,sCAGLkB,EAASD,EAAMa,QAAO,SAAAK,GAAC,OAAIA,EAAE1B,KAAOA,SAiDgBgC,CAAmB7C,EAAKa,WAI9E,0BAAMiC,SAvCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB7C,QAASmB,EACT2B,MAAM,IAAIC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,IAG7BxB,EACUmB,GACPzC,MAAK,SAAA+C,GACJjC,EAASD,EAAMmC,OAAOD,IACtB/B,EAAW,SA4BX,2BACEiC,MAAOlC,EACPmC,SA1BiB,SAACX,GACxBnB,QAAQC,IAAIkB,EAAMY,OAAOF,OACzBjC,EAAWuB,EAAMY,OAAOF,UA0BpB,4BAAQvC,KAAK,UAAb,SAGF,kBAAC,EAAD,CAAQF,KAAMS,EAAU,YAAc,MAAOR,YA1BlC,WACbS,GAAYD,QCrDhBmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.93a6d20c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  return (\r\n    <li>{note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update \r\n}","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(updated => {\r\n        setNotes(notes.map(note => note.id !== id ? note : updated))\r\n      })\r\n      .catch(error => {\r\n        alert(\r\n          `the note '${note.content}' was already deleted from server`\r\n        )\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n    noteService\r\n      .getAll()\r\n      .then(init => {\r\n        setNotes(init)\r\n      })\r\n  }, [])\r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(created => {\r\n        setNotes(notes.concat(created))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowAll(!showAll)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          <Note key={i} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n      </ul>\r\n\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote} \r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>  \r\n\r\n      <Button text={showAll ? \"important\" : \"all\"} handleClick={toggle}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Button = ({ text, handleClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={handleClick}>\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}